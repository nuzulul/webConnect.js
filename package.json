{
  "name": "webconnect",
  "version": "0.0.4",
  "description": "ðŸ“¶ Browser to browser connection without server",
  "main": "dist/umd/webConnect.umd.js",
  "module": "dist/esm/webConnect.esm.js",
  "exports": {
    ".": {
      "import": "./dist/esm/webConnect.esm.js",
      "require": "./dist/umd/webConnect.umd.js"
    }
  },
  "scripts": {
    "start": "npm run dev-node",
    "pre-dev": "npm install --include dev",
    "build-dev-cjs": "tsc -p tsconfig-devcjs.json",
    "build-dev-esm": "tsc -p tsconfig-devesm.json",
    "dev-browser": "nodemon -e js,ts --watch src --watch test --exec \"tsc -p tsconfig-rollup.json && rollup -c public/config/rollup.config.dev.js && node test/server-browser.js\"",
    "dev": "npm run dev-browser",
	
    "removedir": "node -e \"var fs = require('fs'); try{process.argv.slice(1).map((fpath) => fs.rmdirSync(fpath, { recursive: true }))}catch(err){console.log(`Dist not found`)}; process.exit(0);\"",
    "build-all": "tsc -p tsconfig-rollup.json && rollup -c public/config/rollup.config.build.js && echo {\"type\": \"commonjs\"}>dist\\umd\\package.json && echo {\"type\": \"module\"}>dist\\esm\\package.json",
    "build-types": "tsc -p tsconfig-rollup.json && rollup -c public/config/rollup.config.buildtypes.js && tsc -p tsconfig-esm.json && tsc -p tsconfig-umd.json",
    "build": "npm run removedir dist && npm run build-all && npm run build-types",
    "backup": "node -e \"var fs = require('fs'); try{fs.copyFileSync('package.json', 'package-backup.json')}catch(err){console.log(`Copy failed`)}; process.exit(0);\"",
    "restore": "node -e \"var fs = require('fs'); try{fs.copyFileSync('package-backup.json', 'package.json')}catch(err){console.log(`Copy failed`)}; process.exit(0);\"",
    "prepublishOnly": "npm run backup && npm pkg delete devDependencies && npm pkg delete dependencies",
    "postpublish": "npm run restore",
	
	"gh-deploy-init": "git push origin && git subtree push --prefix docs origin gh-pages",
	"gh-deploy": "git push origin :gh-pages && git subtree push --prefix docs origin gh-pages",
	"doc":"git add docs -f && git commit -m \"docs\" && npm run gh-deploy && git reset --soft HEAD~ && git restore --staged .",
	
    "test-all": "nodemon -e js,ts --watch src --watch test --exec \"npm run build-dev-cjs && node public/cjs/test/test-all.js\"",
    "test": "npm run test-all"
  },
  "files": [
    "dist/",
    "LICENSE"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/nuzulul/webConnect.js.git"
  },
  "keywords": [
    "webconnect",
    "browser-to-browser",
    "p2p",
    "ipfs",
    "webtorrent",
    "mqtt",
    "web-peer",
    "web-connect",
    "browser-connectivity",
    "distributed-web",
    "distributed",
    "decentralized"
  ],
  "author": "Nuzulul Zulkarnain",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/nuzulul/webConnect.js/issues"
  },
  "homepage": "https://github.com/nuzulul/webConnect.js#readme",
  "dependencies": {
    "trystero": "^0.20.0"
  },
  "devDependencies": {
    "@rollup/plugin-commonjs": "^28.0.0",
    "@rollup/plugin-node-resolve": "^15.3.0",
    "@rollup/plugin-typescript": "^12.1.0",
    "nodemon": "^3.1.7",
    "rollup": "^4.23.0",
    "tslib": "^2.7.0",
    "typescript": "^5.6.2"
  }
}
